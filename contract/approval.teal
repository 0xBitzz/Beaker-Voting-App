#pragma version 8
intcblock 0 1 5
bytecblock 0x766f74655f616d6f756e74 0x766f74655f636f756e74 0x766f74655f63686f696365 0x7265675f626567696e 0x7265675f656e64 0x796573 0x766f74655f626567696e 0x766f74655f656e64 0x
txn NumAppArgs
intc_0 // 0
==
bnz main_l8
txna ApplicationArgs 0
pushbytes 0x2ff574e9 // "create(uint64,uint64,uint64,uint64)void"
==
bnz main_l7
txna ApplicationArgs 0
pushbytes 0xd1bd2736 // "cast_vote(string)void"
==
bnz main_l6
txna ApplicationArgs 0
pushbytes 0x1d5987db // "upvote()void"
==
bnz main_l5
err
main_l5:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub upvote_5
intc_1 // 1
return
main_l6:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
callsub castvote_4
intc_1 // 1
return
main_l7:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
==
&&
assert
txna ApplicationArgs 1
btoi
store 0
txna ApplicationArgs 2
btoi
store 1
txna ApplicationArgs 3
btoi
store 2
txna ApplicationArgs 4
btoi
store 3
load 0
load 1
load 2
load 3
callsub create_3
intc_1 // 1
return
main_l8:
txn OnCompletion
intc_1 // OptIn
==
bnz main_l12
txn OnCompletion
pushint 2 // CloseOut
==
bnz main_l11
err
main_l11:
txn ApplicationID
intc_0 // 0
!=
assert
callsub downvote_2
intc_1 // 1
return
main_l12:
txn ApplicationID
intc_0 // 0
!=
assert
callsub register_0
intc_1 // 1
return

// register
register_0:
global Round
bytec_3 // "reg_begin"
app_global_get
>=
global Round
bytec 4 // "reg_end"
app_global_get
<=
&&
assert
txn Sender
bytec_0 // "vote_amount"
intc_0 // 0
app_local_put
txn Sender
bytec_2 // "vote_choice"
bytec 8 // ""
app_local_put
retsub

// auth_opted_in
authoptedin_1:
global CurrentApplicationID
app_opted_in
retsub

// downvote
downvote_2:
txn Sender
bytec_2 // "vote_choice"
app_local_get
bytec 5 // "yes"
==
bz downvote_2_l2
bytec_1 // "vote_count"
bytec_1 // "vote_count"
app_global_get
txn Sender
bytec_0 // "vote_amount"
app_local_get
-
app_global_put
txn Sender
bytec_0 // "vote_amount"
intc_0 // 0
app_local_put
downvote_2_l2:
txn Sender
bytec_2 // "vote_choice"
bytec 8 // ""
app_local_put
retsub

// create
create_3:
store 7
store 6
store 5
store 4
bytec_3 // "reg_begin"
load 4
app_global_put
bytec 4 // "reg_end"
load 5
app_global_put
bytec 6 // "vote_begin"
load 6
app_global_put
bytec 7 // "vote_end"
load 7
app_global_put
bytec_1 // "vote_count"
intc_0 // 0
app_global_put
bytec_3 // "reg_begin"
intc_0 // 0
app_global_put
bytec 4 // "reg_end"
intc_0 // 0
app_global_put
bytec 6 // "vote_begin"
intc_0 // 0
app_global_put
bytec 7 // "vote_end"
intc_0 // 0
app_global_put
retsub

// cast_vote
castvote_4:
store 8
txn Sender
callsub authoptedin_1
// unauthorized
assert
txn Sender
intc_2 // 5
asset_holding_get AssetBalance
store 10
store 9
global Round
bytec 6 // "vote_begin"
app_global_get
>=
// Ensure that voting can only take place within voting window
assert
global Round
bytec 7 // "vote_end"
app_global_get
<=
// Ensure that voting can only take place within voting window
assert
load 10
// Ensure account has opted into the ENB
assert
load 9
pushint 1000 // 1000
>=
assert
load 8
extract 2 0
pushbytes 0x6162737461696e // "abstain"
==
load 8
extract 2 0
pushbytes 0x6e6f // "no"
==
||
load 8
extract 2 0
bytec 5 // "yes"
==
||
assert
txn Sender
bytec_2 // "vote_choice"
load 8
extract 2 0
app_local_put
load 8
extract 2 0
bytec 5 // "yes"
==
bz castvote_4_l2
txn Sender
intc_2 // 5
asset_holding_get AssetBalance
store 12
store 11
txn Sender
bytec_0 // "vote_amount"
load 11
app_local_put
bytec_1 // "vote_count"
bytec_1 // "vote_count"
app_global_get
txn Sender
bytec_0 // "vote_amount"
app_local_get
+
app_global_put
castvote_4_l2:
retsub

// upvote
upvote_5:
txn Sender
intc_2 // 5
asset_holding_get AssetBalance
store 14
store 13
txn Sender
bytec_0 // "vote_amount"
load 13
app_local_put
bytec_1 // "vote_count"
bytec_1 // "vote_count"
app_global_get
txn Sender
bytec_0 // "vote_amount"
app_local_get
+
app_global_put
retsub